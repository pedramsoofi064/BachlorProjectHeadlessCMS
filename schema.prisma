// This file is automatically generated by Keystone, do not modify it manually.
// Modify your Keystone config when you want to change this.

datasource sqlite {
  url      = env("DATABASE_URL")
  provider = "sqlite"
}

generator client {
  provider   = "prisma-client-js"
  output     = "node_modules/.prisma/client"
  engineType = "binary"
}

model User {
  id       String @id @default(cuid())
  name     String @default("")
  email    String @unique @default("")
  password String
}

model Post {
  id          String    @id @default(cuid())
  title       String    @default("")
  status      String?   @default("draft")
  content     String    @default("[{\"type\":\"paragraph\",\"children\":[{\"text\":\"\"}]}]")
  publishDate DateTime?
  tags        Tag[]     @relation("Post_tags_Tag_posts")
}

model Tag {
  id    String @id @default(cuid())
  name  String @default("")
  posts Post[] @relation("Post_tags_Tag_posts")
}

model Page {
  id             String        @id @default(cuid())
  pageURL        String        @default("")
  title          String        @default("")
  sections       PageSection[] @relation("PageSection_page")
  additionalData String?

  @@index([pageURL])
}

model PageSection {
  id                        String  @id @default(cuid())
  sectionId                 String  @default("")
  sectionTitle              String  @default("")
  backgroundImage_filesize  Int?
  backgroundImage_extension String?
  backgroundImage_width     Int?
  backgroundImage_height    Int?
  backgroundImage_mode      String?
  backgroundImage_id        String?
  contentTitle              String  @default("")
  contentImages             Image[] @relation("PageSection_contentImages_many")
  content                   String  @default("[{\"type\":\"paragraph\",\"children\":[{\"text\":\"\"}]}]")
  isActive                  Boolean @default(true)
  page                      Page?   @relation("PageSection_page", fields: [pageId], references: [id])
  pageId                    String? @map("page")

  @@index([sectionId])
  @@index([pageId])
}

model Image {
  id                             String        @id @default(cuid())
  title                          String        @default("")
  alt                            String        @default("")
  image_filesize                 Int?
  image_extension                String?
  image_width                    Int?
  image_height                   Int?
  image_mode                     String?
  image_id                       String?
  from_PageSection_contentImages PageSection[] @relation("PageSection_contentImages_many")
}

model NavigationMenu {
  id   String @id @default(cuid())
  name String @default("")
}

model Partner {
  id   String @id @default(cuid())
  name String @default("")
}

model Achievement {
  id   String @id @default(cuid())
  name String @default("")
}